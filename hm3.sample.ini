
; -----------------------------------------------------------------------------
; General settings
; -----------------------------------------------------------------------------

; Define how to handle sessions. Standard PHP sessions, or a custom DB version
;
;  PHP   Standard PHP session handlers
;  DB    Custom database based sessions
session_type=PHP

; Define how users authenticate. You can use an IMAP or POP3 mail server, or
; a database schema
;
; DB      use database support (see below) to authenticate
; IMAP    use an IMAP server for authentication, the imap module must be enabled
; POP3    use a POP3 server for authentication, the pop3 module must be enabled
auth_type=DB

; if using "IMAP" as an auth type, this defines the server to use
imap_auth_name=localhost
imap_auth_server=localhost
imap_auth_port=143
imap_auth_tls=

; if using "POP3" as the auth type, this defines the server to use
pop3_auth_name=localhost
pop3_auth_server=localhost
pop3_auth_port=110
pop3_auth_tls=

; Optional default SMTP server. Authentication will be done with the users login
; credentials, so this probably only makes sense if you are using POP3 or IMAP
; for authentication
default_smtp_name=
default_smtp_server=
default_smtp_port=
default_smtp_tls=

; Default language to use for the interface strings
default_language=en

; Storage location for user settings. Can be either "file" or "DB". If set to
; DB the hm_user_settings file must be available.
user_config_type=file

; location of other application data that should not be inside the document
; root
app_data_dir=/var/lib/hm3

; location of the user settings files. Must be readable/writable by the web
; server. Only used if user_config_type is set to "file"
user_settings_dir=/var/lib/hm3/users

; location of uploaded attachments for outbound messages
attachment_dir=/var/lib/hm3/attachments

; Allow HTTP requests. Not recommended. 
disable_tls=false

; Comma delimited usernames with admin access. Currently this only enables the
; "create account" link in the account module set, and is only used if the
; auth_type is set to DB
admin_users=

; App name used throughout the program
app_name=HM3

; External command used to compress javascript includes during the config build process
; Examples:
;   js_compress='java -jar /usr/local/lib/yuicompressor-2.4.8.jar --type js'
;   js_compress='uglifyjs -nc --unsafe -c -v'
js_compress=false

; External command used to compress css includes during the config build process
; Examples:
;   css_compress='java -jar /usr/local/lib/yuicompressor-2.4.8.jar --type css'
css_compress=false

; Browser side encryption using forge (https://github.com/digitalbazaar/forge)
; Enabling either one of these options causes the forge javascript lib to be
; included. This adds about 70KB to the page size (when gzipped).

; use AES encryption for ajax responses
encrypt_ajax_requests=

; use AES encryption for data stored in local storage
encrypt_local_storage=


; -----------------------------------------------------------------------------
; DB support
; -----------------------------------------------------------------------------
;
; All settings are required if using the built in DB user or session support.
;
; For the DB_auth session type The target DB must contain a table called
; hm_user that we can read and write to.
;
;   Postgresql      : create table hm_user (username varchar(255) primary key not null, hash varchar(255));
;   Mysql or sqlite : create table hm_user (username varchar(250), hash varchar(250), primary key (username));
;
; For DB_session support the following additional table must be available:
;
;   Postgresql      : create table hm_user_session (hm_id varchar(250) primary key not null, data text, date timestamp);
;   Mysql or sqlite : create table hm_user_session (hm_id varchar(250), data longblob, date timestamp, primary key (hm_id));
;
; For DB support for user_config_type the following additional table must be available:
;
;   Postgresql      : create table hm_user_settings (username varchar(250) primary key not null, settings text);
;   Mysql or sqlite : create table hm_user_settings(username varchar(250), settings longblob, primary key (username));
;
; Technically any DB driver supported by the PHP PDO extension should work as
; long as the required tables are present. For sqlite, only the db_host needs to
; be set.

; database host name or ip address
db_host=127.0.0.1

; database name
db_name=test

; database user
db_user=test

; database password
db_pass=123456

; database type. can be any supported PDO driver
db_driver=mysql


; -----------------------------------------------------------------------------
; Modules
; -----------------------------------------------------------------------------

; Modules enabled
modules=core,contacts,feeds,pop3,imap,smtp,site,account,idle_timer,calendar,themes,nux,developer,github,wordpress,history,saved_searches,nasa
